"use strict";(globalThis.webpackChunkkkimdev=globalThis.webpackChunkkkimdev||[]).push([[18],{6807:t=>{t.exports=JSON.parse('{"permalink":"/blog/2018/06/15/IEEE-754-Floating-Point-Type-in-C++","source":"@site/blog/2018-06-15-IEEE-754-Floating-Point-Type-in-C++.md","title":"IEEE 754 Floating Point Type in C++","description":"Let\'s say we want to use IEEE 754 32/64bit floating point types in C++, then","date":"2018-06-15T00:00:00.000Z","tags":[],"readingTime":7.51,"hasTruncateMarker":true,"authors":[{"name":"Kibeom Kim","url":"/","imageURL":"https://github.com/kkimdev.png","key":"kkimdev","page":null}],"frontMatter":{"draft":false,"title":"IEEE 754 Floating Point Type in C++","authors":"kkimdev"},"unlisted":false,"prevItem":{"title":"Rust - Compile-Time Memory Safety","permalink":"/blog/2019/04/22/Rust-Compile-Time-Memory-Safety"}}')},9087:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>r});var o=n(6363);const i={},a=o.createContext(i);function s(t){const e=o.useContext(a);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),o.createElement(a.Provider,{value:e},t.children)}},9533:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var o=n(6807),i=n(7259),a=n(9087);const s={draft:!1,title:"IEEE 754 Floating Point Type in C++",authors:"kkimdev"},r=void 0,l={authorsImageUrls:[void 0]},u=[];function c(t){const e={code:"code",p:"p",...(0,a.R)(),...t.components};return(0,i.jsxs)(e.p,{children:["Let's say we want to use IEEE 754 32/64bit floating point types in C++, then\nthere is ",(0,i.jsx)(e.code,{children:"float"})," and ",(0,i.jsx)(e.code,{children:"double"})," right? Unfortunately, C++ standard guarantees\nalmost nothing about the built-in floating point types."]})}function p(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}}}]);